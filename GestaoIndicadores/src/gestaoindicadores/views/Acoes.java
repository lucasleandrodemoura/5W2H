/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestaoindicadores.views;

import gestaoindicadores.controlers.Usuarios;
import gestaoindicadores.models.CRUD;
import gestaoindicadores.models.Config;
import gestaoindicadores.models.HibernateUtil;
import gestaoindicadores.models.TelaVIEW;
import java.awt.Color;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.Label;
import java.beans.PropertyVetoException;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author lucas
 */
public class Acoes extends javax.swing.JInternalFrame implements TelaVIEW {
    gestaoindicadores.controlers.Acoes obj;
    /**
     * Creates new form Stakeholders
     */
    public Acoes() {
        initComponents();
        this.AlimentaTabela();
        this.setBackground(Color.white);
        this.setMaximizable(true);
        this.setTitle("Acoes");
        

    }
    
    

    public void AlimentaTabela() {

        int contador = 0;

        DefaultTableModel model = new DefaultTableModel();
        jTable.setModel(model);

        model.addColumn("Código");
        model.addColumn("Descrição");
        model.addColumn("Ativo");
        String sql = "SELECT * FROM acoes";

        String filtro = this.sProcura.getText();
        if (!filtro.equals("")) {
            sql += " WHERE oque LIKE '%" + filtro + "%' ";
        }

        ResultSet x = new CRUD().select(sql);
        /*
        try {
            while (x.next()) {
                obj = new gestaoindicadores.controlers.Acoes(x.getInt("idacoes"), x.getString("descricao"), x.getBoolean("ativo"));
                model.addRow(new Object[]{"", "", "", ""});
                this.jTable.setValueAt(obj.getIdacoes(), contador, 0);
                this.jTable.setValueAt(obj.getDescricao(), contador, 1);
                this.jTable.setValueAt(obj.getAtivoDescricao(), contador, 2);
                contador++;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas na alimentação das tabelas" + ex.getMessage());
        }
        */

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        btnNovo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        sProcura = new javax.swing.JTextField();
        jButtonAcoesPorDia = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(null);
        setClosable(true);
        setForeground(java.awt.Color.white);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/gestaoindicadores/includes/flag_48x48.png"))); // NOI18N
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestaoindicadores/includes/new_16X16.png"))); // NOI18N
        btnNovo.setToolTipText("Novo");
        btnNovo.setFocusable(false);
        btnNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNovo);

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestaoindicadores/includes/edit_16X16.png"))); // NOI18N
        btnEditar.setToolTipText("Editar");
        btnEditar.setFocusable(false);
        btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEditar);

        btnDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestaoindicadores/includes/del_16X16.png"))); // NOI18N
        btnDel.setToolTipText("Excluir");
        btnDel.setFocusable(false);
        btnDel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });
        jToolBar1.add(btnDel);

        jLabel1.setText("Procurar");

        sProcura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sProcuraKeyPressed(evt);
            }
        });

        jButtonAcoesPorDia.setText("Ações por dia");
        jButtonAcoesPorDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAcoesPorDiaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sProcura, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAcoesPorDia, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(sProcura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAcoesPorDia)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        if (this.jTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Nenhum registro selecionado");
        } else {
            int selectedRow = this.jTable.getSelectedRow();
            int id = (int) this.jTable.getValueAt(selectedRow, 0);

            new AcoesRecords(id).setVisible(true);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        // TODO add your handling code here:
        if (this.jTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Nenhum registro selecionado");
        } else {
            int selectedRow = this.jTable.getSelectedRow();
            int id = (int) this.jTable.getValueAt(selectedRow, 0);

            if (JOptionPane.showConfirmDialog(null, "Deseja realmente excluir este registro?") == 0) {
                Session sessao = null;

                try {
                    sessao = HibernateUtil.getSessionFactory().openSession();
                    Transaction t = sessao.beginTransaction();
                    obj = new gestaoindicadores.controlers.Acoes(id);
                    sessao.delete(obj);
                    t.commit();
                    JOptionPane.showMessageDialog(null, "Registro excluído com sucesso");
                    this.AlimentaTabela();
                } catch (HibernateException he) {
                    JOptionPane.showMessageDialog(null, "ERRO: " + he.getMessage());
                    he.printStackTrace();
                } finally {
                    sessao.close();
                }
            }

        }
    }//GEN-LAST:event_btnDelActionPerformed

    private void sProcuraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sProcuraKeyPressed
        // TODO add your handling code here:
        this.AlimentaTabela();
    }//GEN-LAST:event_sProcuraKeyPressed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        // TODO add your handling code here:
        new AcoesRecords().setVisible(true);
    }//GEN-LAST:event_btnNovoActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
        this.AlimentaTabela();
    }//GEN-LAST:event_formFocusGained

    private void jButtonAcoesPorDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAcoesPorDiaActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset ds = new DefaultCategoryDataset();
        List resultado = null;

        try {
            Session sessao = HibernateUtil.getSessionFactory().openSession();

            
            org.hibernate.Query q = sessao.createQuery("FROM Acoes");
            
            resultado = q.list();

            for (Object o : resultado) {
                gestaoindicadores.controlers.Acoes p = (gestaoindicadores.controlers.Acoes) o;
                ds.addValue(40.5, "maximo", "dia 1");
                
                
            }

        } catch (HibernateException he) {
            he.printStackTrace();
        }
        
      

        // cria o gráfico
        JFreeChart grafico = ChartFactory.createBarChart("Ações por dia", "Dia", 
            "Valor", ds, PlotOrientation.VERTICAL, true, true, false);
        ChartPanel chartPanel = new ChartPanel(grafico);
        JFrame x = new JFrame("Ações por dia");
        x.setBounds(0, 0, 500, 300);
        
        x.add(chartPanel);
        x.setVisible(true);
        
    }//GEN-LAST:event_jButtonAcoesPorDiaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton jButtonAcoesPorDia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField sProcura;
    // End of variables declaration//GEN-END:variables
}
